name: Tests

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        python-version: [3.11]
        include:
          - primary_db: test_db
          - primary_db_user: postgres
          - primary_db_user_password: postgres
          - primary_db_host: localhost
          - primary_db_port: 5432
          - db_port: 5432

    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: test_db
        ports:
          - 5432:5432
        options: >-
          --health-cmd "pg_isready -U postgres"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt  # Install your project dependencies

      - name: Wait for Postgres to be ready
        run: |
          until pg_isready -h localhost -p 5432 -U postgres; do
            echo "Waiting for postgres..."
            sleep 1
          done

      - name: Apply migrations
        env:
          SETTINGS: ${{ secrets.SETTINGS }}
          SECURITY_KEY: ${{ secrets.SECURITY_KEY }}
          PRIMARY_DB: ${{ matrix.primary_db }}
          PRIMARY_DB_USER: ${{ matrix.primary_db_user }}
          PRIMARY_DB_USER_PASSWORD: ${{ matrix.primary_db_user_password }}
          PRIMARY_DB_HOST: ${{ matrix.primary_db_host }}
          PRIMARY_DB_PORT: ${{ matrix.primary_db_port }}
          DB_PORT: ${{ matrix.db_port }}
        run: python manage.py migrate

      - name: Run tests with coverage
        env:
          SETTINGS: ${{ secrets.SETTINGS }}
          SECURITY_KEY: ${{ secrets.SECURITY_KEY }}
          PRIMARY_DB: ${{ matrix.primary_db }}
          PRIMARY_DB_USER: ${{ matrix.primary_db_user }}
          PRIMARY_DB_USER_PASSWORD: ${{ matrix.primary_db_user_password }}
          PRIMARY_DB_HOST: ${{ matrix.primary_db_host }}
          PRIMARY_DB_PORT: ${{ matrix.primary_db_port }}
          DB_PORT: ${{ matrix.db_port }}
        run: python manage.py test
#          pip install coverage  # Install coverage
#          coverage run manage.py test  # Run tests and collect coverage data
#          coverage report  # Print coverage report
